import se.mattias.model.*
import java.util.Set

global Set<Meddelande> gMeddelanden;

// **************** PACKA UPP OBJEKT *******************

rule "Leverantörsfaktura med produkter finns"
    when
        $lf: Leverantorsfaktura($pl: produkter)
        $p: Produkt() from $pl
    then
        System.out.println("Konsekvens:         Tillför produkt.");
        insert ($p);
end

rule "Leverantörsfaktura med leverantör finns"
    when
        $lf: Leverantorsfaktura($l: leverantor)
    then
        System.out.println("Konsekvens:         Tillför leverantör.");
        insert ($l);
end

rule "Produkt med fordonsinformation finns"
    when
        Produkt($f: fordon != null)
    then
        System.out.println("Konsekvens:         Tillför fordonsinformation.");
        insert ($f);
end


// ************ GENERELL AVDRAGSRÄTT **************

rule "8:3 ML Generell avdragsrätt"
    no-loop
    when
        $p: Produkt(svarskod == null)
    then
        System.out.println("Konsekvens:         Sätter avdragsgilltBelopp (momsbelopp).");
        modify($p) {setAvdragsgilltBelopp($p.getMomsbelopp())};
end


// ****************** VERIFIERING ********************

rule "8:15 ML Verifiering - Produkttyp Fordon, Fordon saknas"
    no-loop
    when
        $p: Produkt($pt: produkttyp == Produkt.Produkttyp.FORDON_HYRA ||
                produkttyp == Produkt.Produkttyp.FORDON_FORVARV, fordon == null)
    then
        System.out.println("Konsekvens:         Sätter svarskod (001) och meddelande (KOMPLETTERING_KRAVS).");
        gMeddelanden.add(new Meddelande(Meddelande.Typ.KOMPLETTERING_KRAVS,
                "Produkttyp " + $pt + " men fordonsinformation saknas.",
                "Produkter.Produkt.Fordon"));
        modify($p) {setMeddelande("Produkttyp " + $pt + " men fordonsinformation saknas."), setSvarskod("001")};
end

rule "8:15 ML Verifiering - Fordon finns men produkttyp ej fordonsrelaterad"
    no-loop
    when
        $p: Produkt($pt: produkttyp != Produkt.Produkttyp.FORDON_HYRA &&
                        produkttyp != Produkt.Produkttyp.FORDON_FORVARV, fordon != null)
    then
        System.out.println("Konsekvens:         Sätter meddelande (KOMPLETTERING_KRAVS).");
        gMeddelanden.add(new Meddelande(Meddelande.Typ.KOMPLETTERING_KRAVS,
                "Felaktig Produkttyp, Fordon finns men produkttyp ej fordonsrelaterad.",
                "Produkter.Produkt.Produkttyp"));
end

rule "8:15 ML Verifiering - Fordon finns men produkttyp saknas"
    no-loop
    when
        $p: Produkt($pt: produkttyp == null, fordon != null)
    then
        System.out.println("Konsekvens:         Sätter meddelande (KOMPLETTERING_KRAVS).");
        gMeddelanden.add(new Meddelande(Meddelande.Typ.KOMPLETTERING_KRAVS,
                "Fordon finns men Produkttyp saknas.",
                "Produkter.Produkt.Produkttyp"));
end

// ******************** RISK FÖR AVDRAGSFÖRBUD ***********************

rule "8:15 ML Regnr i fakturaspec, eventuellt fordon"
    no-loop
    when
        $p: Produkt(produkttyp == null, fakturaSpec matches ".*[A-Z]{3}[0-9]{2}[0-9A-Z]{1}.*")
    then
        System.out.println("Konsekvens:         Sätter svarskod (201) och meddelande (NOTERING).");
        gMeddelanden.add(new Meddelande(Meddelande.Typ.NOTERING,
                "Regnr i fakturaspec. Om fordon, komplettera med produkttyp och fordonsinformation.",
                "Produkter.Produkt.Produkttyp Produkter.Produkt.Fordon"));
        modify($p) {setMeddelande("Eventuellt fordon"), setSvarskod("201");}
end

rule "8:15 ML Leverantör med fordonsrelaterad verksamhet"
    when
        Leverantorsfaktura($l: leverantor, $pl: produkter)
        exists (Produkt(produkttyp == null) from $pl)
        Leverantor(this == $l, verksamheter contains "45110" ||  //Handel med personbilar och lätta motorfordon
                                verksamheter contains "64910" || //Finansiell leasing
                                verksamheter contains "77110")   //Uthyrning och leasing av personbilar och lätta motorfordon
    then
        System.out.println("Konsekvens:         Sätter meddelande (NOTERING).");
        gMeddelanden.add(new Meddelande(Meddelande.Typ.NOTERING,
                "Leverantör med fordonsrelaterad verksamhet. Om fordon, komplettera med produkttyp och fordonsinformation.",
                "Produkter.Produkt.Produkttyp Produkter.Produkt.Fordon"));
end

// ******************** ÄNDAMÅL FÖR FORDONSFÖRVÄRV-/HYRA ***********************

rule "8:15 ML Ändamål återförsäljning"
    no-loop
    when
        $f: Fordon(andamal == Fordon.Andamal.ATERFORSALJNING, !avdragsgilltAndamal)
    then
        System.out.println("Konsekvens:         Sätter avdragsgilltAndamal (true).");
        modify($f){setAvdragsgilltAndamal(true);}
end

rule "8:15 ML Ändamål uthyrning"
    no-loop
    when
        $f: Fordon(andamal == Fordon.Andamal.UTHYRNING, !avdragsgilltAndamal)
    then
        System.out.println("Konsekvens:         Sätter avdragsgilltAndamal (true).");
        modify($f){setAvdragsgilltAndamal(true);}
end

rule "8:15 ML Ändamål Taxi"
    no-loop
    when
        $f: Fordon(andamal == Fordon.Andamal.PERSONTRANSPORTER_ENLIGT_TAXITRAFIKLAGEN, !avdragsgilltAndamal)
    then
        System.out.println("Konsekvens:         Sätter avdragsgilltAndamal (true).");
        modify($f){setAvdragsgilltAndamal(true);}
end

rule "8:15 ML Ändamål transporter av avlidna"
    no-loop
    when
        $f: Fordon(andamal == Fordon.Andamal.TRANSPORTER_AV_AVLIDNA, !avdragsgilltAndamal)
    then
        System.out.println("Konsekvens:         Sätter avdragsgilltAndamal (true).");
        modify($f){setAvdragsgilltAndamal(true);}
end

rule "8:15 ML Ändamål skattepliktig körkortsutbildning"
    no-loop
    when
        $f: Fordon(andamal == Fordon.Andamal.SKATTEPLIKTIG_KORKORTSUTBILDNING, !avdragsgilltAndamal)
    then
        System.out.println("Konsekvens:         Sätter avdragsgilltAndamal (true).");
        modify($f){setAvdragsgilltAndamal(true);}
end

// ******************* PERSONBIL ELLER MC ENLIGT ML **********************

rule "8:15 ML Fordonsslag Motorcykel"
    no-loop
	when
	    $f: Fordon( fordonsslag == Fordon.Fordonsslag.MC
	    , !pbmcEnligtML )
	then
	    System.out.println("Konsekvens:         Sätter pbmcEnligtML (true)");
	    modify($f){setPbmcEnligtML(true);}
end

rule "1:13 ML PB1 (personbil)"
    no-loop
	when
	    $f: Fordon( fordonsslag == Fordon.Fordonsslag.PB1, !pbmcEnligtML )
	then
	    System.out.println("Konsekvens:         Sätter pbmcEnligtML (true)");
	    modify($f){setPbmcEnligtML(true);}
end

rule "1:13 ML PB2 (husbil)"
    no-loop
	when
	    $f: Fordon( fordonsslag == Fordon.Fordonsslag.PB2, totalvikt <=3500,
	        !harLuftspalt)
	then
	    System.out.println("Konsekvens:         Sätter pbmcEnligtML (true)");
	    modify($f){setPbmcEnligtML(true);}
end

rule "1:13 ML PB2 med luftspalt"
    no-loop
    salience 10
	when
    	$f: Fordon( fordonsslag == Fordon.Fordonsslag.PB2, harLuftspalt )
	then
	    System.out.println("Konsekvens:         Sätter pbmcEnligtML (false)");
	    modify($f){setPbmcEnligtML(false);}
end

rule "1:13 ML Lastbil"
    no-loop
	when
	    $f: Fordon( fordonsslag == Fordon.Fordonsslag.LB, totalvikt <=3500, !lattLastbil )
	then
	    System.out.println("Konsekvens:         Sätter lattLastbil (true)");
	    modify($f){setLattLastbil(true);}
end

rule "1:13 ML Lätt lastbil - skåp"
    no-loop
	when
	    $f: Fordon( lattLastbil, karosserikod == "BB", !harLuftspalt ) //TODO: Kan ev kompletteras med äldre koder.
	then
    	System.out.println("Konsekvens:         Sätter pbmcEnligtML (true)");
    	modify($f){setPbmcEnligtML(true);}
end

rule "1:13 ML Lätt lastbil med luftspalt"
    no-loop
    salience 10
	when
	    $f: Fordon( lattLastbil, harLuftspalt, pbmcEnligtML )
	then
        System.out.println("Konsekvens:         Sätter pbmcEnligtML (false)");
        modify($f){setPbmcEnligtML(false);}
end

rule "1:13 ML Buss"
no-loop
	when
	    $f: Fordon( fordonsslag == Fordon.Fordonsslag.BUSS, totalvikt <= 3500 )
	then
	    System.out.println("Konsekvens:         Sätter pbmcEnligtML (true)");
	    modify($f){setPbmcEnligtML(true);}
end

// Rule "1:13 ej registrerat fordon"


// ******************* AVDRAGSFÖRBUD 100 % **************************

rule "8:15 ML Avdragsförbud 100 % förvärv av personbil eller mc"
    no-loop
    when
        $p: Produkt($f: fordon, $pt: produkttyp == Produkt.Produkttyp.FORDON_FORVARV)
        Fordon(this == $f, pbmcEnligtML, !avdragsgilltAndamal)
    then
        System.out.println("Konsekvens:         Sätter svarskod (101) och avdragsgilltBelopp (0)");
        modify($p) {setMeddelande("Avdragsförbud för personbil och MC enligt 8 kap. 15 ML."), setSvarskod("101"),
            setAvdragsgilltBelopp(0);}
end

rule "8:15 ML Avdragsförbud 100 % förhyrning av personbil eller mc"
    no-loop
    when
        $p: Produkt($f: fordon, $pt: produkttyp == Produkt.Produkttyp.FORDON_HYRA)
        Fordon(this == $f, pbmcEnligtML, !avdragsgilltAndamal, milIMomspliktigVerksamhet <= 100)
    then
        System.out.println("Konsekvens:         Sätter svarskod (101) och avdragsgilltBelopp (0)");
        modify($p) {setMeddelande("Avdragsförbud för personbil och MC enligt 8 kap. 15 ML."), setSvarskod("101"),
                    setAvdragsgilltBelopp(0);}
end


// ****************** AVDRAGSFÖRBUD 50 % ******************************

rule "8:16 ML 50 % förhyrning av personbil eller mc"
    no-loop
    when
        $p: Produkt($f: fordon, $pt: produkttyp == Produkt.Produkttyp.FORDON_HYRA)
        Fordon(this == $f, pbmcEnligtML, !avdragsgilltAndamal, milIMomspliktigVerksamhet > 100)
    then
        System.out.println("Konsekvens:         Sätter svarskod (102) och avdragsgilltBelopp (momsbelopp x 0,5)");
        modify($p) {setMeddelande("Avdrag 50 % för personbil och MC enligt 8 kap. 16 ML."), setSvarskod("102"),
                    setAvdragsgilltBelopp($p.getMomsbelopp()*0.5);}
end